version: '3.8'
services:
  pg_db:
    image: postgres:latest
    container_name: pg_db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=catalog
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - pg-data:/var/lib/postgres/data
  redis_db:
    image: redis:latest
    container_name: redis_db
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" 
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
  user-api:
    image: randandel/user-service:latest
    ports:
      - "80:80" 
    build:
     context: .
     dockerfile: services/user/User.API/Dockerfile
    environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+80
     - JWT_SETTINGS__SECRET=CF6F07A3B43D4A6B5F9F5DE7687A392C6E71E2AABD7D2D83CFB0F58B6CE6C369
     - S3IMAGE__BUCKET=
     - S3IMAGE__KEY=
     - S3IMAGE__SECRET=
     - REDIS__CONNECTIONSTRING=localhost
     - Rabbitmq__HostName=localhost 
     - Rabbitmq__UserName=user 
     - Rabbitmq__Password=password 
     - Rabbitmq__RetryCount=5 
    depends_on:
     - pg_db
     - redis_db
     - rabbitmq
volumes:
 pg-data:
 redis-data:
 rabbitmq-data:   